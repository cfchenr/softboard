{"version":3,"sources":["media/logo.png","Pages/Data/themes.js","Pages/Components/ThemeSwitcher.jsx","services/api.js","Pages/Components/Navigationbar.jsx","Pages/Components/ListExercises.jsx","Pages/Home/index.jsx","Pages/Login/index.jsx","Pages/Exercise/index.jsx","Pages/AddExercise/index.jsx","Pages/EditExercise/index.jsx","Pages/Dashboard/index.jsx","routes.js","App.jsx","serviceWorker.js","store/index.jsx","index.jsx"],"names":["module","exports","themes","ThemeSwitcher","state","currentTheme","setTheme","theme","Object","keys","forEach","key","cssKey","cssValue","document","body","style","setProperty","toggleTheme","themeNames","currentThemeIndex","indexOf","length","setState","localStorage","setItem","themeNumber","getItem","this","prevProps","prevState","onClick","className","id","type","htmlFor","React","Component","api","create","baseURL","headers","Accept","remove","endpoint","params","token","a","delete","Authorization","then","response","data","catch","error","put","post","get","Navigationbar","props","useState","loggedin","setLoggedState","fname","setFname","lname","setLname","username","setUsername","email","setEmail","loginModalShow","setLoginModalShow","handleCloseLogin","registerModalShow","setRegisterModalShow","handleCloseRegister","authError","setAuthError","registerError","setRegisterError","emailsMustMatch","setEmailsMustMatch","passwordsMustMatch","setPasswordsMustMatch","userExists","setUserExists","getPerfil","results","first_name","last_name","console","log","status","logout","login","credentials","access","refresh","detail","removeItem","Navbar","collapseOnSelect","variant","expand","backgroundColor","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","event","preventDefault","target","elements","value","password","Alert","Group","Label","Control","name","placeholder","required","Footer","Button","form","password2","cpassword","email2","cemail","user_type","userType","item","split","map","isInvalid","Feedback","autoComplete","as","Container","Brand","href","Image","src","require","alt","height","Toggle","aria-controls","Collapse","setSearch","search","inline","FormControl","Nav","Link","Row","Col","addResponseTransform","ok","ListExercises","exercises","setExercises","useEffect","search_string","trim","temp","exercise","i","response2","hasNotSubHeadings","indexSubheading","subheading","Question","replace","Solution","Suggestion","Subheadings","Problem","error2","setShow","modalTitle","setModalTitle","modalBody","setModalBody","handleClose","handleShow","render_HTML_MATHJax","tags","tag","index","Context","options","asciimath2jax","useMathMLspacing","delimiters","preview","Text","text","parse","xs","ExerciseId","color","j","Order","ButtonGroup","size","array","substring","Resolution","Home","Login","Exercise","match","AddExercise","subheadingCount","setSubheadingCount","processing","setProcessing","sendExercise","title","problem","Tags","suggestion","resolution","getElementById","innerHTML","getElementsByName","reponse2","controlId","column","sm","rows","marginTop","div","createElement","setAttribute","appendChild","formGroup","label","col","textArea","removeChild","lastChild","aria-labelledby","data-backdrop","data-keyboard","centered","Spinner","animation","EditExercise","addSubheading","count","response_remove","addSubheadings","slice","solution","Dashboard","setCount","Routes","path","component","exact","App","Boolean","window","location","hostname","INITIAL_STATE","reducer","combineReducers","auth","action","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93b0b7c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5cbbadf4.png\";","const themes = {\r\n    'rez': {\r\n      'green-color': 'rgb(4, 211, 97)',\r\n      'black-color': 'rgb(19, 18, 26)',\r\n      'white-color': 'rgb(255, 255, 255)',\r\n      'grey-color': 'rgb(135, 134, 139)',\r\n      'button-color': 'rgb(19, 18, 26)',\r\n      'text-color': 'rgba(4, 211, 97)'\r\n    },\r\n    'rez2': {\r\n      'green-color': 'rgba(4, 211, 97)',\r\n      'white-color': 'rgb(19, 18, 26)',\r\n      'black-color': 'rgb(255, 255, 255)',\r\n      'grey-color': 'rgb(135, 134, 139)',\r\n      'text-color': 'rgb(255, 255, 255)',\r\n      'button-color': 'rgba(4, 211, 97)'\r\n    },\r\n  };\r\n  \r\n  export default themes;","import React from \"react\";\r\nimport themes from \"../Data/themes\";\r\nimport \"./index.css\";\r\nclass ThemeSwitcher extends React.Component {\r\n  state = { currentTheme: \"rez\" };\r\n\r\n  componentDidMount() {\r\n    var themeNumber = localStorage.getItem(\"@softboard:theme\") || \"0\";\r\n    const themeNames = Object.keys(themes);\r\n    this.setState({ currentTheme: themeNames[themeNumber] });\r\n    this.setTheme();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentTheme !== prevState.currentTheme) {\r\n      this.setTheme();\r\n    }\r\n  }\r\n\r\n  setTheme = () => {\r\n    const theme = themes[this.state.currentTheme];\r\n    Object.keys(theme).forEach(key => {\r\n      const cssKey = `--${key}`;\r\n      const cssValue = theme[key];\r\n      document.body.style.setProperty(cssKey, cssValue);\r\n    });\r\n  };\r\n\r\n  toggleTheme = () => {\r\n    const themeNames = Object.keys(themes);\r\n    const currentThemeIndex = themeNames.indexOf(this.state.currentTheme);\r\n    if (currentThemeIndex === themeNames.length - 1) {\r\n      this.setState({ currentTheme: themeNames[0] });\r\n      localStorage.setItem(\"@softboard:theme\", 0);\r\n    } else {\r\n      this.setState({ currentTheme: themeNames[currentThemeIndex + 1] });\r\n      localStorage.setItem(\"@softboard:theme\", currentThemeIndex + 1);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          onClick={this.toggleTheme}\r\n          className=\"react-switch-checkbox\"\r\n          id={`react-switch-new`}\r\n          type=\"checkbox\"\r\n        />\r\n        <label className=\"react-switch-label\" htmlFor={`react-switch-new`}>\r\n          <span className={`react-switch-button`} />\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeSwitcher;\r\n","import { create } from \"apisauce\";\r\n\r\nconst api = create({\r\n  //baseURL: \"http://127.0.0.1:8000/api/v1\",\r\n  baseURL: \"https://softboarddev.herokuapp.com/api/v1\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\napi.addResponseTransform(response => {\r\n  if (!response.ok) {\r\n    throw response;\r\n  }\r\n});\r\n\r\nasync function remove(endpoint, params, token) {\r\n  return await api\r\n    .delete(endpoint, params, { headers: { Authorization: `Bearer ${token}` } })\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nasync function put(endpoint, params, token) {\r\n  return await api\r\n    .put(endpoint, params, { headers: { Authorization: `Bearer ${token}` } })\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nasync function post(endpoint, params, token = null) {\r\n  if (token) {\r\n    return await api\r\n      .post(endpoint, params, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n  return await api\r\n    .post(endpoint, params)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nasync function get(endpoint, params, token = null) {\r\n  if (token) {\r\n    return await api\r\n      .get(endpoint, params, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n  return await api\r\n    .get(endpoint, params)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport { post, get, remove, put };\r\n","import React, { useState } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport ThemeSwitcher from \"./ThemeSwitcher\";\r\n\r\nimport { post, get } from \"../../services/api\";\r\n\r\nexport default function Navigationbar(props) {\r\n  const [loggedin, setLoggedState] = useState(false);\r\n  const [fname, setFname] = useState(null);\r\n  const [lname, setLname] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const [loginModalShow, setLoginModalShow] = useState(false);\r\n  const handleCloseLogin = () => setLoginModalShow(false);\r\n  const handleShowLogin = () => setLoginModalShow(true);\r\n\r\n  const [registerModalShow, setRegisterModalShow] = useState(false);\r\n  const handleCloseRegister = () => setRegisterModalShow(false);\r\n  const handleShowRegister = () => setRegisterModalShow(true);\r\n\r\n  const [authError, setAuthError] = useState(null);\r\n  const [registerError, setRegisterError] = useState(null);\r\n  const [emailsMustMatch, setEmailsMustMatch] = useState(false);\r\n  const [passwordsMustMatch, setPasswordsMustMatch] = useState(false);\r\n  const [userExists, setUserExists] = useState(false);\r\n\r\n  const getPerfil = () => {\r\n    get(\"/user/\", {}, localStorage.getItem(\"@megua:access_token\"))\r\n      .then(response => {\r\n        setFname(response.results[0].first_name);\r\n        setLname(response.results[0].last_name);\r\n        setUsername(response.results[0].username);\r\n        setEmail(response.results[0].email);\r\n        localStorage.setItem(\"@megua:username\", username);\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        if (error.status === 401) {\r\n          logout();\r\n        }\r\n      });\r\n  };\r\n\r\n  //TODO: Rever o token refresh\r\n\r\n  const login = credentials => {\r\n    post(\"/token/\", credentials)\r\n      .then(response => {\r\n        setLoggedState(true);\r\n        setAuthError(null);\r\n        localStorage.setItem(\"@megua:access_token\", response.access);\r\n        localStorage.setItem(\"@megua:refresh_token\", response.refresh);\r\n        getPerfil();\r\n        handleCloseLogin();\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        if (error.status >= 500) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === 404) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === null) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (\r\n          error.data.detail ===\r\n          \"No active account found with the given credentials\"\r\n        ) {\r\n          setAuthError(\"Nome do usuário ou password errados.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const register = data => {\r\n    post(\"/register/\", data)\r\n      .then(response => {\r\n        login({ username: data.username, password: data.password });\r\n        setRegisterError(null);\r\n        setEmailsMustMatch(false);\r\n        setUserExists(false);\r\n        setPasswordsMustMatch(false);\r\n        handleCloseRegister();\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        setEmailsMustMatch(false);\r\n        setPasswordsMustMatch(false);\r\n        setUserExists(false);\r\n        setRegisterError(null);\r\n        if (error.status >= 500) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === 404) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === null) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.data) {\r\n          for (let item in error.data) {\r\n            switch (error.data[item][0]) {\r\n              case \"Emails must match\":\r\n                setEmailsMustMatch(true);\r\n                break;\r\n              case \"Passwords must match\":\r\n                setPasswordsMustMatch(true);\r\n                break;\r\n              case \"user with this username already exists.\":\r\n                setUserExists(true);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoggedState(false);\r\n    setFname(false);\r\n    setLname(false);\r\n    setUsername(false);\r\n    setEmail(false);\r\n    localStorage.removeItem(\"@megua:access_token\");\r\n    localStorage.removeItem(\"@megua:refresh_token\");\r\n  };\r\n\r\n  const handleSubmitLogin = event => {\r\n    event.preventDefault();\r\n    login({\r\n      username: event.target.elements.username.value,\r\n      password: event.target.elements.password.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitRegister = event => {\r\n    event.preventDefault();\r\n    register({\r\n      username: event.target.elements.username.value,\r\n      first_name: event.target.elements.fname.value,\r\n      last_name: event.target.elements.lname.value,\r\n      password: event.target.elements.password.value,\r\n      password2: event.target.elements.cpassword.value,\r\n      email: event.target.elements.email.value,\r\n      email2: event.target.elements.cemail.value,\r\n      user_type: event.target.elements.userType.value\r\n    });\r\n  };\r\n\r\n  const token = localStorage.getItem(\"@megua:access_token\");\r\n  useState(() => {\r\n    if (token !== null) {\r\n      setLoggedState(true);\r\n      getPerfil();\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    props.setSearch(event.target.elements.search.value);\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"navbar-line fixed-top\"\r\n      collapseOnSelect\r\n      variant=\"dark\"\r\n      expand=\"lg\"\r\n      style={{ backgroundColor: \"--var(dark-color)\" }}\r\n    >\r\n      <Modal show={loginModalShow} onHide={handleCloseLogin}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Entrar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"loginForm\" onSubmit={handleSubmitLogin}>\r\n            {authError && <Alert variant={\"danger\"}>{authError}</Alert>}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nome de usuário</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nome de usuário\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Palavra passe\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button form=\"loginForm\" type=\"submit\" variant=\"primary\">\r\n            Entrar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseLogin}>\r\n            Cancelar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={registerModalShow} onHide={handleCloseRegister}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"registerForm\" onSubmit={handleSubmitRegister}>\r\n            {registerError &&\r\n              registerError.split(\";\").map(error => {\r\n                return <Alert variant={\"danger\"}>{error}</Alert>;\r\n              })}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nome de usuário</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nome de usuário\"\r\n                isInvalid={userExists}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Já existe um usuário com este nome\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Palavra passe\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirmar palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"cpassword\"\r\n                autoComplete=\"confirm-password\"\r\n                placeholder=\"Confirmar palavra passe\"\r\n                isInvalid={passwordsMustMatch}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                As passwords devem coincidir\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Primeiro nome</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                placeholder=\"Primeiro nome\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Último nome</Form.Label>\r\n              <Form.Control name=\"lname\" placeholder=\"Último nome\" required />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirmar email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"cemail\"\r\n                autoComplete=\"confirm-email\"\r\n                placeholder=\"Confirmar email\"\r\n                isInvalid={emailsMustMatch}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Os emails devem coincidir\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Tipo de utilizador</Form.Label>\r\n              <Form.Control as=\"select\" name=\"userType\">\r\n                <option value=\"ST\">Estudante</option>\r\n                <option value=\"PROF\">Professor</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button form=\"registerForm\" type=\"submit\" variant=\"primary\">\r\n            Registar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseRegister}>\r\n            Cancelar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">\r\n          <Image\r\n            src={require(\"../../media/logo.png\")}\r\n            alt=\"Brand\"\r\n            style={{ height: \"3em\" }}\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Form className=\"ml-auto\" onSubmit={handleSubmit} inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Pesquisar\"\r\n              className=\" mr-sm-2\"\r\n              name=\"search\"\r\n            />\r\n            <Button type=\"submit\">Pesquisar</Button>\r\n          </Form>\r\n          {loggedin ? (\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className=\"button-nav\" href=\"/dashboard/\">\r\n                <strong>Dashboard</strong>\r\n              </Nav.Link>\r\n              <Row>\r\n                <div className=\"ml-auto text-right\">\r\n                  <Col>\r\n                    {fname} {lname}\r\n                  </Col>\r\n                  <Col className=\"mail-nav\">{email}</Col>\r\n                </div>\r\n                {/*<div className=\"mr-3\">\r\n                  <Image\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    roundedCircle\r\n                    style={{\r\n                      border: \"3px solid rgb(4, 211, 97)\"\r\n                    }}\r\n                    src=\"https://avatars2.githubusercontent.com/u/17366849?v=4\"\r\n                    alt=\"Profile\"\r\n                  />\r\n                </div>*/}\r\n              </Row>\r\n              <Nav.Link className=\"button-nav\" onClick={logout}>\r\n                <strong>Logout</strong>\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className=\"button-nav\" onClick={handleShowLogin}>\r\n                <strong>Entrar</strong>\r\n              </Nav.Link>\r\n              <Nav.Link className=\"button-nav\" onClick={handleShowRegister}>\r\n                <strong>Registar</strong>\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n          <ThemeSwitcher />\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { get } from \"../../services/api\";\r\nimport parse from \"html-react-parser\";\r\nimport MathJax from \"react-mathjax2\";\r\nimport \"./index.css\";\r\n\r\nexport default function ListExercises(props) {\r\n  const [exercises, setExercises] = useState([]);\r\n\r\n  function sleep(milliseconds) {\r\n    var start = new Date().getTime();\r\n    for (var i = 0; i < 1e7; i++) {\r\n      if (new Date().getTime() - start > milliseconds) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const getExercises = () => {\r\n    var str =\r\n      props.search_string.trim() === \"\"\r\n        ? \"/exercise/\"\r\n        : \"/exercise/?search=\" + props.search_string;\r\n    return get(str, {})\r\n      .then(response => {\r\n        //TODO: para cada exercicio, ir buscar as alineas\r\n        const temp = [];\r\n        if (response.results.length === 0) {\r\n          setExercises([]);\r\n        }\r\n\r\n        response.results.map(async (exercise, i) => {\r\n          return await get(\"/subheading/\" + exercise.id + \"/\", {})\r\n            .then(response2 => {\r\n              if (!exercise.hasNotSubHeadings) {\r\n                var indexSubheading = 0;\r\n                if (response2.results) {\r\n                  response2.results.map(subheading => {\r\n                    if (subheading.Question) {\r\n                      subheading.Question = subheading.Question.replace(\r\n                        /href/g,\r\n                        \"target='_blank' href\"\r\n                      );\r\n                    }\r\n                    if (subheading.Solution) {\r\n                      subheading.Solution = subheading.Solution.replace(\r\n                        /href/g,\r\n                        \"target='_blank' href\"\r\n                      );\r\n                    }\r\n                    if (subheading.Suggestion) {\r\n                      subheading.Suggestion = subheading.Suggestion.replace(\r\n                        /href/g,\r\n                        \"target='_blank' href\"\r\n                      );\r\n                    }\r\n                    response2.results[indexSubheading] = subheading;\r\n                    indexSubheading++;\r\n                  });\r\n                }\r\n                exercise.Subheadings = response2.results;\r\n              }\r\n              exercise.Problem = exercise.Problem.replace(\r\n                /href/g,\r\n                \"target='_blank' href\"\r\n              );\r\n              temp[i] = exercise;\r\n              if (i + 1 === response.results.length) setExercises(temp);\r\n            })\r\n            .catch(error2 => {\r\n              console.log(error2);\r\n            });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [props.search_string]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"Error\");\r\n  const [modalBody, setModalBody] = useState(\"Error\");\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  function render_HTML_MATHJax(tags) {\r\n    return tags.map((tag, index) => {\r\n      if (index % 2 === 0) {\r\n        return (\r\n          <MathJax.Context\r\n            options={{\r\n              asciimath2jax: {\r\n                useMathMLspacing: true,\r\n                delimiters: [[\"$\", \"$\"]],\r\n                preview: \"none\"\r\n              }\r\n            }}\r\n            key={index}\r\n          >\r\n            <MathJax.Text text={parse(\"<div>\" + tag + \"<div>\")} />\r\n          </MathJax.Context>\r\n        );\r\n      } else {\r\n        return (\r\n          <MathJax.Context\r\n            options={{\r\n              asciimath2jax: {\r\n                useMathMLspacing: true,\r\n                delimiters: [\r\n                  [\"$$\", \"$$\"],\r\n                  [\"$\", \"$\"]\r\n                ],\r\n                preview: \"none\"\r\n              }\r\n            }}\r\n            key={index}\r\n          >\r\n            <MathJax.Text text={\"$$\" + tag + \"$$\"} />\r\n          </MathJax.Context>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content\">\r\n        <Container>\r\n          <Row>\r\n            {exercises.map((exercise, i) => {\r\n              return (\r\n                <Col key={i} xs={12} className=\"mt-3\">\r\n                  <h1>\r\n                    <a\r\n                      href={\"/exercise/\" + exercise.ExerciseId}\r\n                      style={{ color: \"var(--white-color)\" }}\r\n                    >\r\n                      {parse(exercise.Title)}\r\n                    </a>\r\n                  </h1>\r\n                  {render_HTML_MATHJax(exercise.Problem.split(\"$$\"))}\r\n                  {exercise.Subheadings &&\r\n                    exercise.Subheadings.map((subheading, j) => {\r\n                      return (\r\n                        <div key={j}>\r\n                          <b>\r\n                            {subheading.Order}\r\n                            {\") \"}\r\n                          </b>\r\n                          {render_HTML_MATHJax(subheading.Question.split(\"$$\"))}\r\n                          <ButtonGroup size=\"sm\" className=\"mt-3 mb-3\">\r\n                            {subheading.Suggestion && (\r\n                              <Button\r\n                                onClick={() => {\r\n                                  setModalTitle(\"Sugestão\");\r\n                                  const string = subheading.Suggestion.substring(\r\n                                    1,\r\n                                    subheading.Suggestion.length - 1\r\n                                  );\r\n                                  const array = string.split(\",\");\r\n                                  setModalBody(\r\n                                    array.map(item => {\r\n                                      const value =\r\n                                        item\r\n                                          .trim()\r\n                                          .substring(\r\n                                            1,\r\n                                            item.trim().length - 1\r\n                                          ) + \" \";\r\n                                      return render_HTML_MATHJax(\r\n                                        value.split(\"$$\")\r\n                                      );\r\n                                    })\r\n                                  );\r\n                                  handleShow();\r\n                                }}\r\n                              >\r\n                                Sugestão\r\n                              </Button>\r\n                            )}\r\n                            {subheading.Solution && (\r\n                              <Button\r\n                                variant=\"danger\"\r\n                                onClick={() => {\r\n                                  setModalTitle(\"Solução\");\r\n                                  setModalBody(\r\n                                    render_HTML_MATHJax(\r\n                                      subheading.Solution.split(\"$$\")\r\n                                    )\r\n                                  );\r\n                                  handleShow();\r\n                                }}\r\n                              >\r\n                                Solução\r\n                              </Button>\r\n                            )}\r\n                            {/*subheading.Tags && <Button\r\n                              variant=\"outline-info\"\r\n                              onClick={() => {\r\n                                setModalTitle(\"Tags\");\r\n                                const array = subheading.Tags.replace(/'/g, '\"');\r\n                                setModalBody(JSON.parse(array).map((tag, tagi) => {\r\n                                  return <Badge variant=\"info mr-2\">{tag}</Badge>\r\n                                })\r\n                                );\r\n                                handleShow();\r\n                              }}\r\n                            >\r\n                              Tags\r\n                            </Button>*/}\r\n                          </ButtonGroup>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  <ButtonGroup size=\"sm\" className=\"mt-3 mb-3\">\r\n                    {exercise.Suggestion && (\r\n                      <Button\r\n                        onClick={() => {\r\n                          setModalTitle(\"Sugestão\");\r\n                          const string = exercise.Suggestion.substring(\r\n                            1,\r\n                            exercise.Suggestion.length - 1\r\n                          );\r\n                          const array = string.split(\",\");\r\n                          setModalBody(\r\n                            array.map(item => {\r\n                              const value =\r\n                                item\r\n                                  .trim()\r\n                                  .substring(1, item.trim().length - 1) + \" \";\r\n                              return render_HTML_MATHJax(value.split(\"$$\"));\r\n                            })\r\n                          );\r\n                          handleShow();\r\n                        }}\r\n                      >\r\n                        Sugestão\r\n                      </Button>\r\n                    )}\r\n                    {exercise.Solution && (\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                          setModalTitle(\"Solução\");\r\n                          setModalBody(\r\n                            render_HTML_MATHJax(exercise.Solution.split(\"$$\"))\r\n                          );\r\n                          handleShow();\r\n                        }}\r\n                      >\r\n                        Solução\r\n                      </Button>\r\n                    )}\r\n                    {/*exercise.Tags && <Button\r\n                      variant=\"outline-info\"\r\n                      onClick={() => {\r\n                        setModalTitle(\"Tags\");\r\n                        const array = exercise.Tags.replace(/'/g, '\"');\r\n                        setModalBody( JSON.parse(array).map((tag, tagi) => {\r\n                          return <Badge variant=\"info mr-2\">{tag}</Badge>\r\n                        })\r\n                        );\r\n                        handleShow();\r\n                      }}\r\n                    >\r\n                      Tags\r\n                    </Button>*/}\r\n                    {exercise.Resolution && (\r\n                      <Button\r\n                        variant=\"success\"\r\n                        size=\"sm\"\r\n                        className=\"mt-3 mb-5\"\r\n                        onClick={() => {\r\n                          setModalTitle(\"Resolução\");\r\n                          setModalBody(\r\n                            render_HTML_MATHJax(exercise.Resolution.split(\"$$\"))\r\n                          );\r\n                          handleShow();\r\n                        }}\r\n                      >\r\n                        Resolução\r\n                      </Button>\r\n                    )}\r\n                  </ButtonGroup>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{modalBody}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Fechar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport Navigationbar from '../Components/Navigationbar';\r\nimport ListExercises from '../Components/ListExercises';\r\n\r\nexport default function Home() {\r\n\tconst [search_string, setSearch] = useState('');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<Navigationbar\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListExercises\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport ListExercises from \"../Components/ListExercises\";\r\n\r\nexport default function Login() {\r\n  const [search_string, setSearch] = useState('');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<Navigationbar\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListExercises\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport ListExercises from \"../Components/ListExercises\";\r\n\r\nexport default function Exercise(props) {\r\n  const [search_string, setSearch] = useState(props.match.params.id);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <Navigationbar search_string={search_string} setSearch={setSearch} />\r\n        <ListExercises search_string={search_string} setSearch={setSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { post } from \"../../services/api\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nexport default function AddExercise(props) {\r\n  const [subheadingCount, setSubheadingCount] = useState(0);\r\n  const [search_string, setSearch] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [processing, setProcessing] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const addSubheading = () => {\r\n    const div = document.getElementById(\"subheadings\");\r\n    var subheading = document.createElement(\"div\");\r\n    subheading.setAttribute(\"id\", \"subheading_\" + subheadingCount);\r\n    subheading.setAttribute(\"style\", \"margin-bottom: 50px\");\r\n    var title = document.createElement(\"h3\");\r\n    title.innerHTML = \"Alínea \" + (subheadingCount + 1);\r\n    subheading.appendChild(title);\r\n    var formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    var label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Identificação\";\r\n    var col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    var textArea = document.createElement(\"input\");\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_order_\" + subheadingCount);\r\n    textArea.setAttribute(\"required\", true);\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Questão\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"textarea\");\r\n    textArea.setAttribute(\"rows\", 3);\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_question_\" + subheadingCount);\r\n    textArea.setAttribute(\"required\", true);\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Tags\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"input\");\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_tags_\" + subheadingCount);\r\n    textArea.setAttribute(\"placeholder\", \"Separadas por vírgulas\");\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Sugestão\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"textarea\");\r\n    textArea.setAttribute(\"rows\", 3);\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_suggestion_\" + subheadingCount);\r\n    textArea.setAttribute(\"placeholder\", \"Separadas por vírgulas\");\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Solução\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"textarea\");\r\n    textArea.setAttribute(\"rows\", 3);\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_solution_\" + subheadingCount);\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    div.appendChild(subheading);\r\n    setSubheadingCount(subheadingCount + 1);\r\n  };\r\n\r\n  const removeSubheading = () => {\r\n    const temp = document.getElementById(\"subheadings\");\r\n    temp.removeChild(temp.lastChild);\r\n    setSubheadingCount(subheadingCount - 1);\r\n  };\r\n\r\n  const sendExercise = async event => {\r\n    event.preventDefault();\r\n    setShow(true);\r\n    setProcessing(true);\r\n    post(\r\n      \"/exercise/\",\r\n      {\r\n        Title: event.target.elements.title.value,\r\n        Problem: event.target.elements.problem.value,\r\n        Tags:\r\n          event.target.elements.tags.value.trim().length === 0\r\n            ? \"\"\r\n            : \"[\" +\r\n              event.target.elements.tags.value\r\n                .split(\",\")\r\n                .map(tag => \"'\" + tag.trim() + \"'\") +\r\n              \"]\",\r\n        Suggestion:\r\n          event.target.elements.suggestion.value.trim().length === 0\r\n            ? \"\"\r\n            : \"[\" +\r\n              event.target.elements.suggestion.value\r\n                .split(\",\")\r\n                .map(suggestion => \"'\" + suggestion.trim() + \"'\") +\r\n              \"]\",\r\n        Resolution: event.target.elements.resolution.value\r\n      },\r\n      localStorage.getItem(\"@megua:access_token\")\r\n    )\r\n      .then(async response => {\r\n        document.getElementById(\"results\").innerHTML +=\r\n          \"<h4>Exercício adicionadao com sucesso! <i class='fa fa-check fa-1x text-success' /></h4>\";\r\n        for (var i = 0; i < subheadingCount; i++) {\r\n          await post(\r\n            \"/subheading/\",\r\n            {\r\n              Exercise: response.id,\r\n              Order: document.getElementsByName(\"subheading_order_\" + i)[0]\r\n                .value,\r\n              Question: document.getElementsByName(\r\n                \"subheading_question_\" + i\r\n              )[0].value,\r\n              Tags:\r\n                document\r\n                  .getElementsByName(\"subheading_tags_\" + i)[0]\r\n                  .value.trim().length === 0\r\n                  ? \"\"\r\n                  : \"[\" +\r\n                    document\r\n                      .getElementsByName(\"subheading_tags_\" + i)[0]\r\n                      .value.split(\",\")\r\n                      .map(tag => \"'\" + tag.trim() + \"'\") +\r\n                    \"]\",\r\n              Suggestion:\r\n                document\r\n                  .getElementsByName(\"subheading_suggestion_\" + i)[0]\r\n                  .value.trim().length === 0\r\n                  ? \"\"\r\n                  : \"[\" +\r\n                    document\r\n                      .getElementsByName(\"subheading_suggestion_\" + i)[0]\r\n                      .value.split(\",\")\r\n                      .map(suggestion => \"'\" + suggestion.trim() + \"'\") +\r\n                    \"]\",\r\n              Solution: document.getElementsByName(\r\n                \"subheading_solution_\" + i\r\n              )[0].value\r\n            },\r\n            localStorage.getItem(\"@megua:access_token\")\r\n          )\r\n            .then(reponse2 => {\r\n              document.getElementById(\"results\").innerHTML +=\r\n                \"<h4>Alínea \" +\r\n                (i + 1) +\r\n                \" adicionada com sucesso! <i class='fa fa-check fa-1x text-success' /></h4>\";\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n              document.getElementById(\"results\").innerHTML +=\r\n                \"<h4>Ocorreu um erro ao adicionar a alínea \" +\r\n                (i + 1) +\r\n                \"! <i class='fa fa-times fa-1x text-danger' /></h4>\";\r\n            });\r\n        }\r\n        setProcessing(false);\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        setProcessing(false);\r\n        document.getElementById(\"results\").innerHTML +=\r\n          \"<h4>Ocorreu um erro ao adicionar o exercício! <i class='fa fa-times fa-1x text-danger' /></h4>\";\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <Navigationbar search_string={search_string} setSearch={setSearch} />\r\n        <div className=\"content-body\">\r\n          <div className=\"content\">\r\n            <Container>\r\n              <Form\r\n                onSubmit={event => {\r\n                  sendExercise(event);\r\n                }}\r\n              >\r\n                <h3>Exercício</h3>\r\n                <Form.Group as={Row} controlId=\"ControlInput1\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Título\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"title\" type=\"text\" required />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea1\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Problema\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      name=\"problem\"\r\n                      as=\"textarea\"\r\n                      rows=\"3\"\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlInput2\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Tags\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      name=\"tags\"\r\n                      type=\"text\"\r\n                      placeholder=\"Separadas por vígulas\"\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea2\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Sugestão\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      name=\"suggestion\"\r\n                      as=\"textarea\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Separadas por vígulas\"\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea3\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Solução\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"solution\" as=\"textarea\" rows=\"3\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea4\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Resolução\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"resolution\" as=\"textarea\" rows=\"3\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <div id=\"subheadings\" style={{ marginTop: 100 }}></div>\r\n                <Button onClick={addSubheading}>Adicionar alínea</Button>\r\n                {subheadingCount > 0 && (\r\n                  <Button\r\n                    className=\"ml-4\"\r\n                    variant=\"danger\"\r\n                    onClick={removeSubheading}\r\n                  >\r\n                    Remover alínea\r\n                  </Button>\r\n                )}\r\n                <Button type=\"submit\" className=\"ml-4\" variant=\"success\">\r\n                  Submeter\r\n                </Button>\r\n              </Form>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        data-backdrop=\"static\"\r\n        data-keyboard=\"false\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"text-center\">\r\n          {processing && (\r\n            <h4 id=\"processing\">\r\n              <Spinner animation=\"border\" variant=\"primary\" /> A processar...\r\n            </h4>\r\n          )}\r\n          <div id=\"results\" className=\"mt-3\"></div>\r\n        </Modal.Body>\r\n        {!processing && (\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" href=\"/dashboard/\">\r\n              Dashboard\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleClose}>\r\n              Fechar\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { put, get, remove, post } from \"../../services/api\";\r\n\r\nexport default function EditExercise(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [processing, setProcessing] = useState(true);\r\n\r\n  const [subheadingCount, setSubheadingCount] = useState(0);\r\n  const [search_string, setSearch] = useState(\"\");\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const getExercise = () => {\r\n    get(\r\n      \"/exercise/\" + props.match.params.id + \"/\",\r\n      {},\r\n      localStorage.getItem(\"@megua:access_token\")\r\n    )\r\n      .then(response => {\r\n        document.getElementById(\"form_exercise\").title.value = response.Title;\r\n        document.getElementById(\"form_exercise\").problem.value =\r\n          response.Problem;\r\n        document.getElementById(\"form_exercise\").tags.value = response.Tags\r\n          ? response.Tags.slice(1, -1)\r\n              .split(\",\")\r\n              .map(tag => tag.slice(1, -1))\r\n          : \"\";\r\n        document.getElementById(\r\n          \"form_exercise\"\r\n        ).suggestion.value = response.Suggestion\r\n          ? response.Suggestion.trim()\r\n              .slice(1, -1)\r\n              .split(\",\")\r\n              .map(suggestion => suggestion.trim().slice(1, -1))\r\n          : \"\";\r\n        document.getElementById(\"form_exercise\").solution.value =\r\n          response.Solution;\r\n        document.getElementById(\"form_exercise\").resolution.value =\r\n          response.Resolution;\r\n        get(\r\n          \"/subheading/\" + props.match.params.id + \"/\",\r\n          {},\r\n          localStorage.getItem(\"@megua:access_token\")\r\n        )\r\n          .then(response2 => {\r\n            setSubheadingCount(response2.results.length);\r\n            if (!response2.hasNotSubHeadings) {\r\n              response2.results.map((subheading, i) => {\r\n                addSubheading(i);\r\n                document.getElementsByName(\"subheading_order_\" + i)[0].value =\r\n                  subheading.Order;\r\n                document.getElementsByName(\r\n                  \"subheading_question_\" + i\r\n                )[0].value = subheading.Question;\r\n                document.getElementsByName(\r\n                  \"subheading_tags_\" + i\r\n                )[0].value = subheading.Tags\r\n                  ? subheading.Tags.slice(1, -1)\r\n                      .split(\",\")\r\n                      .map(tag => tag.trim().slice(1, -1))\r\n                  : \"\";\r\n                document.getElementsByName(\r\n                  \"subheading_suggestion_\" + i\r\n                )[0].value = subheading.Suggestion\r\n                  ? subheading.Suggestion.slice(1, -1)\r\n                      .split(\",\")\r\n                      .map(suggestion => suggestion.trim().slice(1, -1))\r\n                  : \"\";\r\n                document.getElementsByName(\r\n                  \"subheading_solution_\" + i\r\n                )[0].value = subheading.Solution;\r\n              });\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const addSubheading = (index = null) => {\r\n    var count = subheadingCount;\r\n    if (index !== null) {\r\n      count = index;\r\n    }\r\n    const div = document.getElementById(\"subheadings\");\r\n    var subheading = document.createElement(\"div\");\r\n    subheading.setAttribute(\"id\", \"subheading_\" + count);\r\n    subheading.setAttribute(\"style\", \"margin-bottom: 50px\");\r\n    var title = document.createElement(\"h3\");\r\n    title.innerHTML = \"Alínea \" + (count + 1);\r\n    subheading.appendChild(title);\r\n    var formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    var label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Identificação\";\r\n    var col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    var textArea = document.createElement(\"input\");\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_order_\" + count);\r\n    textArea.setAttribute(\"required\", true);\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Questão\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"textarea\");\r\n    textArea.setAttribute(\"rows\", 3);\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_question_\" + count);\r\n    textArea.setAttribute(\"required\", true);\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Tags\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"input\");\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_tags_\" + count);\r\n    textArea.setAttribute(\"placeholder\", \"Separadas por vírgulas\");\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Sugestão\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"textarea\");\r\n    textArea.setAttribute(\"rows\", 3);\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_suggestion_\" + count);\r\n    textArea.setAttribute(\"placeholder\", \"Separadas por vírgulas\");\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    formGroup = document.createElement(\"div\");\r\n    formGroup.setAttribute(\"class\", \"form-group row\");\r\n    label = document.createElement(\"label\");\r\n    label.setAttribute(\"class\", \"form-label col-form-label col-sm-2\");\r\n    label.innerHTML = \"Solução\";\r\n    col = document.createElement(\"div\");\r\n    col.setAttribute(\"class\", \"col-sm-10\");\r\n    textArea = document.createElement(\"textarea\");\r\n    textArea.setAttribute(\"rows\", 3);\r\n    textArea.setAttribute(\"class\", \"form-control\");\r\n    textArea.setAttribute(\"name\", \"subheading_solution_\" + count);\r\n    formGroup.appendChild(label);\r\n    col.appendChild(textArea);\r\n    formGroup.appendChild(col);\r\n    subheading.appendChild(formGroup);\r\n\r\n    div.appendChild(subheading);\r\n    if (index === null) setSubheadingCount(subheadingCount + 1);\r\n  };\r\n\r\n  const removeSubheading = () => {\r\n    const temp = document.getElementById(\"subheadings\");\r\n    temp.removeChild(temp.lastChild);\r\n    setSubheadingCount(subheadingCount - 1);\r\n  };\r\n\r\n  const sendExercise = async event => {\r\n    event.preventDefault();\r\n    setShow(true);\r\n    setProcessing(true);\r\n    put(\r\n      \"/exercise/\" + props.match.params.id + \"/\",\r\n      {\r\n        Title: event.target.elements.title.value,\r\n        Problem: event.target.elements.problem.value,\r\n        Tags:\r\n          event.target.elements.tags.value.trim().length === 0\r\n            ? \"\"\r\n            : \"[\" +\r\n              event.target.elements.tags.value\r\n                .split(\",\")\r\n                .map(tag => \"'\" + tag.trim() + \"'\") +\r\n              \"]\",\r\n        Suggestion:\r\n          event.target.elements.suggestion.value.trim().length === 0\r\n            ? \"\"\r\n            : \"[\" +\r\n              event.target.elements.suggestion.value\r\n                .split(\",\")\r\n                .map(suggestion => \"'\" + suggestion.trim() + \"'\") +\r\n              \"]\",\r\n        Resolution: event.target.elements.resolution.value\r\n      },\r\n      localStorage.getItem(\"@megua:access_token\")\r\n    )\r\n      .then(async response => {\r\n        await remove(\r\n          \"/subheading/\" + props.match.params.id + \"/\",\r\n          {},\r\n          localStorage.getItem(\"@megua:access_token\")\r\n        )\r\n          .then(async response_remove => {\r\n            await addSubheadings(response);\r\n          })\r\n          .catch(async error => {\r\n            console.log(error);\r\n            document.getElementById(\"results\").innerHTML +=\r\n              \"<h4>Sem alíneas para atualizar! <i class='fa fa-check fa-1x text-success' /></h4>\";\r\n            await addSubheadings(response);\r\n          });\r\n\r\n        setProcessing(false);\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        setProcessing(false);\r\n        document.getElementById(\"results\").innerHTML +=\r\n          \"<h4>Ocorreu um erro ao adicionar o exercício! <i class='fa fa-times fa-1x text-danger' /></h4>\";\r\n      });\r\n  };\r\n\r\n  const addSubheadings = async response => {\r\n    document.getElementById(\"results\").innerHTML +=\r\n      \"<h4>Exercício adicionadao com sucesso! <i class='fa fa-check fa-1x text-success' /></h4>\";\r\n    for (var i = 0; i < subheadingCount; i++) {\r\n      await post(\r\n        \"/subheading/\",\r\n        {\r\n          Exercise: response.id,\r\n          Order: document.getElementsByName(\"subheading_order_\" + i)[0].value,\r\n          Question: document.getElementsByName(\"subheading_question_\" + i)[0]\r\n            .value,\r\n          Tags:\r\n            document.getElementsByName(\"subheading_tags_\" + i)[0].value.trim()\r\n              .length === 0\r\n              ? \"\"\r\n              : \"[\" +\r\n                document\r\n                  .getElementsByName(\"subheading_tags_\" + i)[0]\r\n                  .value.split(\",\")\r\n                  .map(tag => \"'\" + tag.trim() + \"'\") +\r\n                \"]\",\r\n          Suggestion:\r\n            document\r\n              .getElementsByName(\"subheading_suggestion_\" + i)[0]\r\n              .value.trim().length === 0\r\n              ? \"\"\r\n              : \"[\" +\r\n                document\r\n                  .getElementsByName(\"subheading_suggestion_\" + i)[0]\r\n                  .value.split(\",\")\r\n                  .map(suggestion => \"'\" + suggestion.trim() + \"'\") +\r\n                \"]\",\r\n          Solution: document.getElementsByName(\"subheading_solution_\" + i)[0]\r\n            .value\r\n        },\r\n        localStorage.getItem(\"@megua:access_token\")\r\n      )\r\n        .then(reponse2 => {\r\n          document.getElementById(\"results\").innerHTML +=\r\n            \"<h4>Alínea \" +\r\n            (i + 1) +\r\n            \" adicionada com sucesso! <i class='fa fa-check fa-1x text-success' /></h4>\";\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          document.getElementById(\"results\").innerHTML +=\r\n            \"<h4>Ocorreu um erro ao adicionar a alínea \" +\r\n            (i + 1) +\r\n            \"! <i class='fa fa-times fa-1x text-danger' /></h4>\";\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExercise();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <Navigationbar search_string={search_string} setSearch={setSearch} />\r\n        <div className=\"content-body\">\r\n          <div className=\"content\">\r\n            <Container>\r\n              <Form\r\n                id=\"form_exercise\"\r\n                onSubmit={event => {\r\n                  sendExercise(event);\r\n                }}\r\n              >\r\n                <h3>Exercício</h3>\r\n                <Form.Group as={Row} controlId=\"ControlInput1\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Título\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"title\" type=\"text\" required />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea1\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Problema\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      name=\"problem\"\r\n                      as=\"textarea\"\r\n                      rows=\"3\"\r\n                      required\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlInput2\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Tags\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"tags\" type=\"text\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea2\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Sugestão\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"suggestion\" as=\"textarea\" rows=\"3\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea3\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Solução\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"solution\" as=\"textarea\" rows=\"3\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ControlTextarea4\">\r\n                  <Form.Label column sm=\"2\">\r\n                    Resolução\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control name=\"resolution\" as=\"textarea\" rows=\"3\" />\r\n                  </Col>\r\n                </Form.Group>\r\n                <div id=\"subheadings\" style={{ marginTop: 100 }}></div>\r\n                <Button onClick={() => addSubheading()}>\r\n                  Adicionar alínea\r\n                </Button>\r\n                {subheadingCount > 0 && (\r\n                  <Button\r\n                    className=\"ml-4\"\r\n                    variant=\"danger\"\r\n                    onClick={removeSubheading}\r\n                  >\r\n                    Remover alínea\r\n                  </Button>\r\n                )}\r\n                <Button type=\"submit\" className=\"ml-4\" variant=\"success\">\r\n                  Editar\r\n                </Button>\r\n              </Form>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        data-backdrop=\"static\"\r\n        data-keyboard=\"false\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"text-center\">\r\n          {processing && (\r\n            <h4 id=\"processing\">\r\n              <Spinner animation=\"border\" variant=\"primary\" /> A processar...\r\n            </h4>\r\n          )}\r\n          <div id=\"results\" className=\"mt-3\"></div>\r\n        </Modal.Body>\r\n        {!processing && (\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" href=\"/dashboard/\">\r\n              Dashboard\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleClose}>\r\n              Fechar\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport parse from \"html-react-parser\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { get, remove } from \"../../services/api\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function Dashboard(props) {\r\n  const [exercises, setExercises] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [search_string, setSearch] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [processing, setProcessing] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const getExercises = () => {\r\n    var str =\r\n      search_string.trim() === \"\"\r\n        ? \"/exerciseDashboard/\"\r\n        : \"/exerciseDashboard/?search=\" + search_string;\r\n    get(str, {}, localStorage.getItem(\"@megua:access_token\"))\r\n      .then(response => {\r\n        const temp = [];\r\n        if (response.results.length === 0) {\r\n          setExercises([]);\r\n        }\r\n\r\n        response.results.map((exercise, i) => {\r\n          temp[i] = exercise;\r\n          if (i + 1 === response.results.length) setExercises(temp);\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const deleteExercise = id => {\r\n    setProcessing(true);\r\n    setShow(true);\r\n    remove(\r\n      \"/exercise/\" + id + \"/\",\r\n      {},\r\n      localStorage.getItem(\"@megua:access_token\")\r\n    )\r\n      .then(response => {\r\n        setCount(count + 1);\r\n        document.getElementById(\"results\").innerHTML +=\r\n          \"<h4>Exercício eliminado com sucesso! <i class='fa fa-check fa-1x text-success' /></h4>\";\r\n        setProcessing(false);\r\n      })\r\n      .catch(error => {\r\n        document.getElementById(\"results\").innerHTML +=\r\n          \"<h4>Ocorreu um erro ao eliminar o exercício! <i class='fa fa-times fa-1x text-danger' /></h4>\";\r\n        setProcessing(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [search_string, count]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <Navigationbar search_string={search_string} setSearch={setSearch} />\r\n        <div className=\"content-body\">\r\n          <div className=\"content\">\r\n            <Container>\r\n              <Row>\r\n                <Button href=\"/add_exercise/\" variant=\"primary\">\r\n                  Adicionar exercício\r\n                </Button>\r\n              </Row>\r\n\r\n              {exercises.map((exercise, i) => {\r\n                return (\r\n                  <Row key={i} className=\"mt-3\">\r\n                    <div className=\"mr-auto\">\r\n                      <h3>\r\n                        <a\r\n                          href={\"/exercise/\" + exercise.ExerciseId}\r\n                          style={{ color: \"var(--white-color)\" }}\r\n                        >\r\n                          {parse(exercise.Title)}\r\n                        </a>\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                      <ButtonGroup size=\"sm\">\r\n                        <Button\r\n                          variant=\"success\"\r\n                          href={\"/edit_exercise/\" + exercise.id}\r\n                        >\r\n                          Editar\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          onClick={() => {\r\n                            deleteExercise(exercise.id);\r\n                          }}\r\n                        >\r\n                          Apagar\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </div>\r\n                  </Row>\r\n                );\r\n              })}\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        data-backdrop=\"static\"\r\n        data-keyboard=\"false\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"text-center\">\r\n          {processing && (\r\n            <h4 id=\"processing\">\r\n              <Spinner animation=\"border\" variant=\"primary\" /> A processar...\r\n            </h4>\r\n          )}\r\n          <div id=\"results\" className=\"mt-3\"></div>\r\n        </Modal.Body>\r\n        {!processing && (\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={handleClose}>\r\n              Fechar\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./Pages/Home\";\r\nimport Login from \"./Pages/Login\";\r\nimport Exercise from \"./Pages/Exercise\";\r\nimport AddExercise from \"./Pages/AddExercise\";\r\nimport EditExercise from \"./Pages/EditExercise\";\r\nimport Dashboard from \"./Pages/Dashboard\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/add_exercise/\" component={AddExercise} />\r\n        <Route path=\"/edit_exercise/:id\" component={EditExercise} />\r\n        <Route path=\"/exercise/:id\" component={Exercise} />\r\n        <Route path=\"/dashboard/\" component={Dashboard} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\n// import Button from 'react-bootstrap/Button';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n// import Image from 'react-bootstrap/Image';\r\n// import Row from 'react-bootstrap/Row';\r\n// import Col from 'react-bootstrap/Col';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import logo from './media/logo.png';\r\n\r\nimport Routes from \"./routes\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n\ttoken: ''\r\n};\r\n\r\nfunction auth(state = INITIAL_STATE, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_TOKEN':\r\n\t\t\treturn { ...state, token: action.token };\r\n\t\tcase 'REMOVE_TOKE':\r\n\t\t\treturn { ...state, token: '' };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst reducer = combineReducers({ auth: auth });\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}