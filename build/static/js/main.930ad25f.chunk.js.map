{"version":3,"sources":["media/logo.png","Pages/Data/themes.js","Pages/Components/ThemeSwitcher.jsx","services/api.js","Pages/Components/Navigationbar.jsx","Pages/Components/ListExercises.jsx","Pages/Home/index.jsx","Pages/Login/index.jsx","Pages/Exercise/index.jsx","routes.js","App.jsx","serviceWorker.js","store/index.jsx","index.jsx"],"names":["module","exports","themes","ThemeSwitcher","state","currentTheme","setTheme","theme","Object","keys","forEach","key","cssKey","cssValue","document","body","style","setProperty","toggleTheme","themeNames","currentThemeIndex","indexOf","length","setState","localStorage","setItem","themeNumber","getItem","this","prevProps","prevState","onClick","className","id","type","htmlFor","React","Component","api","create","baseURL","headers","Accept","post","endpoint","params","a","token","Authorization","then","response","data","catch","error","get","Navigationbar","props","useState","loggedin","setLoggedState","fname","setFname","lname","setLname","setUsername","email","setEmail","loginModalShow","setLoginModalShow","handleCloseLogin","registerModalShow","setRegisterModalShow","handleCloseRegister","authError","setAuthError","registerError","setRegisterError","emailsMustMatch","setEmailsMustMatch","passwordsMustMatch","setPasswordsMustMatch","userExists","setUserExists","getPerfil","results","first_name","last_name","username","console","log","status","logout","login","credentials","access","refresh","detail","removeItem","collapseOnSelect","variant","expand","backgroundColor","show","onHide","Header","closeButton","Title","Body","onSubmit","event","preventDefault","target","elements","value","password","Group","Label","Control","name","placeholder","required","Footer","form","password2","cpassword","email2","cemail","user_type","userType","item","split","map","isInvalid","Feedback","autoComplete","as","Brand","src","require","alt","height","Toggle","aria-controls","Collapse","setSearch","search","inline","width","roundedCircle","border","Link","addResponseTransform","ok","ListExercises","exercises","setExercises","useEffect","retrieve","search_string","trim","temp","exercise","i","response2","hasNotSubHeadings","indexSubheading","subheading","Question","replace","Solution","Suggestion","Subheadings","Problem","error2","setShow","modalTitle","setModalTitle","modalBody","setModalBody","handleClose","handleShow","render_HTML_MATHJax","tags","tag","index","Context","options","asciimath2jax","useMathMLspacing","delimiters","preview","Text","text","parse","xs","href","ExerciseId","color","j","Order","size","array","substring","Tags","JSON","tagi","Resolution","Home","Login","Exercise","match","Routes","path","component","exact","App","Boolean","window","location","hostname","INITIAL_STATE","reducer","combineReducers","auth","action","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.930ad25f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5cbbadf4.png\";","const themes = {\r\n    'rez': {\r\n      'green-color': 'rgb(4, 211, 97)',\r\n      'black-color': 'rgb(19, 18, 26)',\r\n      'white-color': 'rgb(255, 255, 255)',\r\n      'grey-color': 'rgb(135, 134, 139)',\r\n      'button-color': 'rgb(19, 18, 26)',\r\n      'text-color': 'rgba(4, 211, 97)'\r\n    },\r\n    'rez2': {\r\n      'green-color': 'rgba(4, 211, 97)',\r\n      'white-color': 'rgb(19, 18, 26)',\r\n      'black-color': 'rgb(255, 255, 255)',\r\n      'grey-color': 'rgb(135, 134, 139)',\r\n      'text-color': 'rgb(255, 255, 255)',\r\n      'button-color': 'rgba(4, 211, 97)'\r\n    },\r\n  };\r\n  \r\n  export default themes;","import React from \"react\";\r\nimport themes from \"../Data/themes\";\r\nimport \"./ThemeSwitcherStyle.css\";\r\nclass ThemeSwitcher extends React.Component {\r\n  state = { currentTheme: \"rez\" };\r\n\r\n  componentDidMount() {\r\n    var themeNumber = localStorage.getItem(\"@softboard:theme\") || \"0\";\r\n    const themeNames = Object.keys(themes);\r\n    this.setState({ currentTheme: themeNames[themeNumber] });\r\n    this.setTheme();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentTheme !== prevState.currentTheme) {\r\n      this.setTheme();\r\n    }\r\n  }\r\n\r\n  setTheme = () => {\r\n    const theme = themes[this.state.currentTheme];\r\n    Object.keys(theme).forEach(key => {\r\n      const cssKey = `--${key}`;\r\n      const cssValue = theme[key];\r\n      document.body.style.setProperty(cssKey, cssValue);\r\n    });\r\n  };\r\n\r\n  toggleTheme = () => {\r\n    const themeNames = Object.keys(themes);\r\n    const currentThemeIndex = themeNames.indexOf(this.state.currentTheme);\r\n    if (currentThemeIndex === themeNames.length - 1) {\r\n      this.setState({ currentTheme: themeNames[0] });\r\n      localStorage.setItem(\"@softboard:theme\", 0);\r\n    } else {\r\n      this.setState({ currentTheme: themeNames[currentThemeIndex + 1] });\r\n      localStorage.setItem(\"@softboard:theme\", currentThemeIndex + 1);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          onClick={this.toggleTheme}\r\n          className=\"react-switch-checkbox\"\r\n          id={`react-switch-new`}\r\n          type=\"checkbox\"\r\n        />\r\n        <label className=\"react-switch-label\" htmlFor={`react-switch-new`}>\r\n          <span className={`react-switch-button`} />\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeSwitcher;\r\n","import { create } from \"apisauce\";\r\n\r\nconst api = create({\r\n  baseURL: \"http://127.0.0.1:8000/api/v1\",\r\n  //baseURL: \"https://softboarddev.herokuapp.com/api/v1\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\napi.addResponseTransform(response => {\r\n  if (!response.ok) {\r\n    throw response;\r\n  }\r\n});\r\n\r\nasync function post(endpoint, params, token = null) {\r\n  if (token) {\r\n    return await api\r\n      .post(endpoint, params, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n  return await api\r\n    .post(endpoint, params)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nasync function get(endpoint, params, token = null) {\r\n  if (token) {\r\n    return await api\r\n      .get(endpoint, params, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n  return await api\r\n    .get(endpoint, params)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport { post, get };\r\n","import React, { useState } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport ThemeSwitcher from './ThemeSwitcher';\r\n\r\nimport { post, get } from \"../../services/api\";\r\n\r\nexport default function Navigationbar(props) {\r\n  const [loggedin, setLoggedState] = useState(false);\r\n  const [fname, setFname] = useState(null);\r\n  const [lname, setLname] = useState(null);\r\n  const [, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const [loginModalShow, setLoginModalShow] = useState(false);\r\n  const handleCloseLogin = () => setLoginModalShow(false);\r\n  const handleShowLogin = () => setLoginModalShow(true);\r\n\r\n  const [registerModalShow, setRegisterModalShow] = useState(false);\r\n  const handleCloseRegister = () => setRegisterModalShow(false);\r\n  const handleShowRegister = () => setRegisterModalShow(true);\r\n\r\n  const [authError, setAuthError] = useState(null);\r\n  const [registerError, setRegisterError] = useState(null);\r\n  const [emailsMustMatch, setEmailsMustMatch] = useState(false);\r\n  const [passwordsMustMatch, setPasswordsMustMatch] = useState(false);\r\n  const [userExists, setUserExists] = useState(false);\r\n\r\n  const getPerfil = () => {\r\n    get(\"/user/\", {}, localStorage.getItem(\"@megua:access_token\"))\r\n      .then(response => {\r\n        setFname(response.results[0].first_name);\r\n        setLname(response.results[0].last_name);\r\n        setUsername(response.results[0].username);\r\n        setEmail(response.results[0].email);\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        if (error.status === 401) {\r\n          logout();\r\n        }\r\n      });\r\n  };\r\n\r\n  //TODO: Rever o token refresh\r\n\r\n  const login = credentials => {\r\n    post(\"/token/\", credentials)\r\n      .then(response => {\r\n        setLoggedState(true);\r\n        setAuthError(null);\r\n        localStorage.setItem(\"@megua:access_token\", response.access);\r\n        localStorage.setItem(\"@megua:refresh_token\", response.refresh);\r\n        getPerfil();\r\n        handleCloseLogin();\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        if (error.status >= 500) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === 404) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === null) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (\r\n          error.data.detail ===\r\n          \"No active account found with the given credentials\"\r\n        ) {\r\n          setAuthError(\"Nome do usuário ou password errados.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const register = data => {\r\n    post(\"/register/\", data)\r\n      .then(response => {\r\n        login({ username: data.username, password: data.password });\r\n        setRegisterError(null);\r\n        setEmailsMustMatch(false);\r\n        setUserExists(false);\r\n        setPasswordsMustMatch(false);\r\n        handleCloseRegister();\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        setEmailsMustMatch(false);\r\n        setPasswordsMustMatch(false);\r\n        setUserExists(false);\r\n        setRegisterError(null);\r\n        if (error.status >= 500) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === 404) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === null) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.data) {\r\n          for (let item in error.data) {\r\n            switch (error.data[item][0]) {\r\n              case \"Emails must match\":\r\n                setEmailsMustMatch(true);\r\n                break;\r\n              case \"Passwords must match\":\r\n                setPasswordsMustMatch(true);\r\n                break;\r\n              case \"user with this username already exists.\":\r\n                setUserExists(true);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoggedState(false);\r\n    setFname(false);\r\n    setLname(false);\r\n    setUsername(false);\r\n    setEmail(false);\r\n    localStorage.removeItem(\"@megua:access_token\");\r\n    localStorage.removeItem(\"@megua:refresh_token\");\r\n  };\r\n\r\n  const handleSubmitLogin = event => {\r\n    event.preventDefault();\r\n    login({\r\n      username: event.target.elements.username.value,\r\n      password: event.target.elements.password.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitRegister = event => {\r\n    event.preventDefault();\r\n    register({\r\n      username: event.target.elements.username.value,\r\n      first_name: event.target.elements.fname.value,\r\n      last_name: event.target.elements.lname.value,\r\n      password: event.target.elements.password.value,\r\n      password2: event.target.elements.cpassword.value,\r\n      email: event.target.elements.email.value,\r\n      email2: event.target.elements.cemail.value,\r\n      user_type: event.target.elements.userType.value\r\n    });\r\n  };\r\n\r\n  const token = localStorage.getItem(\"@megua:access_token\");\r\n  useState(() => {\r\n    if (token !== null) {\r\n      setLoggedState(true);\r\n      getPerfil();\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    props.setSearch(event.target.elements.search.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"navbar-line fixed-top\"\r\n      collapseOnSelect\r\n      variant=\"dark\"\r\n      expand=\"lg\"\r\n      style={{ backgroundColor: \"--var(dark-color)\" }}\r\n    >\r\n      <Modal show={loginModalShow} onHide={handleCloseLogin}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Entrar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"loginForm\" onSubmit={handleSubmitLogin}>\r\n            {authError && <Alert variant={\"danger\"}>{authError}</Alert>}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nome de usuário</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nome de usuário\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Palavra passe\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button form=\"loginForm\" type=\"submit\" variant=\"primary\">\r\n            Entrar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseLogin}>\r\n            Cancelar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={registerModalShow} onHide={handleCloseRegister}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"registerForm\" onSubmit={handleSubmitRegister}>\r\n            {registerError &&\r\n              registerError.split(\";\").map(error => {\r\n                return <Alert variant={\"danger\"}>{error}</Alert>;\r\n              })}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nome de usuário</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nome de usuário\"\r\n                isInvalid={userExists}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Já existe um usuário com este nome\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Palavra passe\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirmar palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"cpassword\"\r\n                autoComplete=\"confirm-password\"\r\n                placeholder=\"Confirmar palavra passe\"\r\n                isInvalid={passwordsMustMatch}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                As passwords devem coincidir\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Primeiro nome</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                placeholder=\"Primeiro nome\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Último nome</Form.Label>\r\n              <Form.Control name=\"lname\" placeholder=\"Último nome\" required />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirmar email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"cemail\"\r\n                autoComplete=\"confirm-email\"\r\n                placeholder=\"Confirmar email\"\r\n                isInvalid={emailsMustMatch}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Os emails devem coincidir\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Tipo de utilizador</Form.Label>\r\n              <Form.Control as=\"select\" name=\"userType\">\r\n                <option value=\"ST\">Estudante</option>\r\n                <option value=\"PROF\">Professor</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button form=\"registerForm\" type=\"submit\" variant=\"primary\">\r\n            Registar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseRegister}>\r\n            Cancelar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Image\r\n            src={require(\"../../media/logo.png\")}\r\n            alt=\"Brand\"\r\n            style={{ height: \"3em\" }}\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Form className=\"ml-auto\" onSubmit={handleSubmit} inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Pesquisar\"\r\n              className=\" mr-sm-2\"\r\n              name=\"search\"\r\n            />\r\n            <Button type=\"submit\">Pesquisar</Button>\r\n          </Form>\r\n          {loggedin ? (\r\n            <Nav className=\"ml-auto\">\r\n              <Row>\r\n                <div className=\"ml-auto text-right\">\r\n                  <Col>\r\n                    {fname} {lname}\r\n                  </Col>\r\n                  <Col className=\"mail-nav\">{email}</Col>\r\n                </div>\r\n                <div className=\"mr-3\">\r\n                  <Image\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    roundedCircle\r\n                    style={{\r\n                      border: \"3px solid rgb(4, 211, 97)\"\r\n                    }}\r\n                    src=\"https://avatars2.githubusercontent.com/u/17366849?v=4\"\r\n                    alt=\"Profile\"\r\n                  />\r\n                </div>\r\n              </Row>\r\n              <Nav.Link className=\"button-nav\" onClick={logout}>\r\n                <strong>Logout</strong>\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className=\"button-nav\" onClick={handleShowLogin}>\r\n                <strong>Entrar</strong>\r\n              </Nav.Link>\r\n              <Nav.Link className=\"button-nav\" onClick={handleShowRegister}>\r\n                <strong>Registar</strong>\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n          <ThemeSwitcher />\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { get } from \"../../services/api\";\r\nimport parse from \"html-react-parser\";\r\nimport MathJax from \"react-mathjax2\";\r\n\r\nexport default function ListExercises(props) {\r\n  const [exercises, setExercises] = useState([]);\r\n\r\n  function sleep(milliseconds) {\r\n    var start = new Date().getTime();\r\n    for (var i = 0; i < 1e7; i++) {\r\n      if (new Date().getTime() - start > milliseconds) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const getExercises = () => {\r\n    var str = \"\"\r\n    if(props.retrieve) {\r\n      str =\r\n      props.search_string.trim() === \"\"\r\n        ? \"/exerciseRetrieve/\"\r\n        : \"/exerciseRetrieve/?search=\" + props.search_string;\r\n    }\r\n    else {\r\n      str =\r\n      props.search_string.trim() === \"\"\r\n        ? \"/exercise/\"\r\n        : \"/exercise/?search=\" + props.search_string;\r\n    }\r\n    return get(str, {})\r\n      .then(response => {\r\n        //TODO: para cada exercicio, ir buscar as alineas\r\n        const temp = [];\r\n        if (response.results.length === 0) {\r\n          setExercises([]);\r\n        }\r\n\r\n        response.results.map(async (exercise, i) => {\r\n          return await get(\"/subheading/\" + exercise.id + \"/\", {})\r\n            .then(response2 => {\r\n              if (!exercise.hasNotSubHeadings) {\r\n                var indexSubheading = 0;\r\n                if (response2.results) {\r\n                  response2.results.map(subheading => {\r\n                    if (subheading.Question) {\r\n                      subheading.Question = subheading.Question.replace(\r\n                        /href/g,\r\n                        \"target='_blank' href\"\r\n                      );\r\n                    }\r\n                    if (subheading.Solution) {\r\n                      subheading.Solution = subheading.Solution.replace(\r\n                        /href/g,\r\n                        \"target='_blank' href\"\r\n                      );\r\n                    }\r\n                    if (subheading.Suggestion) {\r\n                      subheading.Suggestion = subheading.Suggestion.replace(\r\n                        /href/g,\r\n                        \"target='_blank' href\"\r\n                      );\r\n                    }\r\n                    response2.results[indexSubheading] = subheading;\r\n                    indexSubheading++;\r\n                  });\r\n                }\r\n                exercise.Subheadings = response2.results;\r\n              }\r\n              exercise.Problem = exercise.Problem.replace(\r\n                /href/g,\r\n                \"target='_blank' href\"\r\n              );\r\n              temp[i] = exercise;\r\n              if (i + 1 === response.results.length) setExercises(temp);\r\n            })\r\n            .catch(error2 => {\r\n              console.log(error2);\r\n            });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [props.search_string]);\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"Error\");\r\n  const [modalBody, setModalBody] = useState(\"Error\");\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  function render_HTML_MATHJax(tags) {\r\n    return tags.map((tag, index) => {\r\n      if (index % 2 === 0) {\r\n        return <MathJax.Context\r\n        options={{\r\n          asciimath2jax: {\r\n            useMathMLspacing: true,\r\n            delimiters: [\r\n              [\"$\", \"$\"]\r\n            ],\r\n            preview: \"none\"\r\n          }\r\n        }}\r\n        key={index}\r\n      >\r\n        <MathJax.Text text={parse(\"<div>\"+tag+\"<div>\")} />\r\n      </MathJax.Context>\r\n      } else {\r\n        return (\r\n          <MathJax.Context\r\n            options={{\r\n              asciimath2jax: {\r\n                useMathMLspacing: true,\r\n                delimiters: [\r\n                  [\"$$\", \"$$\"],\r\n                  [\"$\", \"$\"]\r\n                ],\r\n                preview: \"none\"\r\n              }\r\n            }}\r\n            key={index}\r\n          >\r\n            <MathJax.Text text={\"$$\"+tag+\"$$\"} />\r\n          </MathJax.Context>\r\n        );\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content\">\r\n        <Container>\r\n          <Row>\r\n            {exercises.map((exercise, i) => {\r\n              return (\r\n                <Col key={i} xs={12} className=\"mt-3\">\r\n                  <h1><a href={'/exercise/'+exercise.ExerciseId} style={{color: 'var(--white-color)'}}>{parse(exercise.Title)}</a></h1>\r\n                  {render_HTML_MATHJax(exercise.Problem.split(\"$$\"))}\r\n                  {exercise.Subheadings &&\r\n                    exercise.Subheadings.map((subheading, j) => {\r\n                      return (\r\n                        <div key={j}>\r\n                          <b>\r\n                            {subheading.Order}\r\n                            {\") \"}\r\n                          </b>\r\n                          {render_HTML_MATHJax(subheading.Question.split(\"$$\"))}\r\n                          <ButtonGroup size=\"sm\" className=\"mt-3 mb-3\">\r\n                            {subheading.Suggestion && <Button\r\n                              variant=\"outline-warning\"\r\n                              onClick={() => {\r\n                                setModalTitle(\"Sugestão\");\r\n                                const string = subheading.Suggestion.substring(1, subheading.Suggestion.length-1)\r\n                                const array = string.split(\",\")\r\n                                setModalBody(array.map((item) => {\r\n                                  const value = item.trim().substring(1, item.trim().length-1)+\" \";\r\n                                  return render_HTML_MATHJax(value.split(\"$$\"))\r\n                                }))\r\n                                handleShow();\r\n                              }}\r\n                            >\r\n                              Sugestão\r\n                            </Button>}\r\n                            {subheading.Solution && <Button\r\n                              variant=\"outline-danger\"\r\n                              onClick={() => {\r\n                                setModalTitle(\"Solução\");\r\n                                setModalBody(render_HTML_MATHJax(subheading.Solution.split(\"$$\")));\r\n                                handleShow();\r\n                              }}\r\n                            >\r\n                              Solução\r\n                            </Button>}\r\n                            {subheading.Tags && <Button\r\n                              variant=\"outline-info\"\r\n                              onClick={() => {\r\n                                setModalTitle(\"Tags\");\r\n                                const array = subheading.Tags.replace(/'/g, '\"');\r\n                                setModalBody(JSON.parse(array).map((tag, tagi) => {\r\n                                  return <Badge variant=\"info mr-2\">{tag}</Badge>\r\n                                })\r\n                                );\r\n                                handleShow();\r\n                              }}\r\n                            >\r\n                              Tags\r\n                            </Button>}\r\n                          </ButtonGroup>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  <ButtonGroup size=\"sm\" className=\"mt-3 mb-3\">\r\n                    {exercise.Suggestion && <Button\r\n                      variant=\"outline-warning\"\r\n                      onClick={() => {\r\n                        setModalTitle(\"Sugestão\");\r\n                        const string = exercise.Suggestion.substring(1, exercise.Suggestion.length-1)\r\n                        const array = string.split(\",\")\r\n                        setModalBody(array.map((item) => {\r\n                          const value = item.trim().substring(1, item.trim().length-1)+\" \";\r\n                          return render_HTML_MATHJax(value.split(\"$$\"))\r\n                        }));\r\n                        handleShow();\r\n                      }}\r\n                    >\r\n                      Sugestão\r\n                    </Button>}\r\n                    {exercise.Solution && <Button\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        setModalTitle(\"Solução\");\r\n                        setModalBody(render_HTML_MATHJax(exercise.Solution.split(\"$$\")));\r\n                        handleShow();\r\n                      }}\r\n                    >\r\n                      Solução\r\n                    </Button>}\r\n                    {exercise.Tags && <Button\r\n                      variant=\"outline-info\"\r\n                      onClick={() => {\r\n                        setModalTitle(\"Tags\");\r\n                        const array = exercise.Tags.replace(/'/g, '\"');\r\n                        setModalBody( JSON.parse(array).map((tag, tagi) => {\r\n                          return <Badge variant=\"info mr-2\">{tag}</Badge>\r\n                        })\r\n                        );\r\n                        handleShow();\r\n                      }}\r\n                    >\r\n                      Tags\r\n                    </Button>}\r\n                    {exercise.Resolution && <Button\r\n                      variant=\"outline-success\"\r\n                      size=\"sm\"\r\n                      className=\"mt-3 mb-5\"\r\n                      onClick={() => {\r\n                        setModalTitle(\"Resolução\");\r\n                        setModalBody(render_HTML_MATHJax(exercise.Resolution.split(\"$$\")));\r\n                        handleShow();\r\n                      }}\r\n                    >\r\n                      Resolução\r\n                    </Button>}\r\n                  </ButtonGroup>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{modalBody}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Fechar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport Navigationbar from '../Components/Navigationbar';\r\nimport ListExercises from '../Components/ListExercises';\r\n\r\nexport default function Home() {\r\n\tconst [search_string, setSearch] = useState('');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<Navigationbar\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListExercises\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport ListExercises from \"../Components/ListExercises\";\r\n\r\nexport default function Login() {\r\n  const [search_string, setSearch] = useState('');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<Navigationbar\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListExercises\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport ListExercises from \"../Components/ListExercises\";\r\n\r\nexport default function Exercise(props) {\r\n  console.log(props.match.params.id)\r\n  const [search_string, setSearch] = useState(props.match.params.id);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<Navigationbar\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n                    retrieve={true}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListExercises\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n                    retrieve={true}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Pages/Home';\r\nimport Login from './Pages/Login';\r\nimport Exercise from './Pages/Exercise';\r\n\r\nexport default function Routes() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" component={Home} exact />\r\n\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t<Route path=\"/exercise/:id\" component={Exercise} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\n// import Button from 'react-bootstrap/Button';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n// import Image from 'react-bootstrap/Image';\r\n// import Row from 'react-bootstrap/Row';\r\n// import Col from 'react-bootstrap/Col';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import logo from './media/logo.png';\r\n\r\nimport Routes from \"./routes\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n\ttoken: ''\r\n};\r\n\r\nfunction auth(state = INITIAL_STATE, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_TOKEN':\r\n\t\t\treturn { ...state, token: action.token };\r\n\t\tcase 'REMOVE_TOKE':\r\n\t\t\treturn { ...state, token: '' };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst reducer = combineReducers({ auth: auth });\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}