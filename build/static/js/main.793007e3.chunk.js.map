{"version":3,"sources":["media/logo.png","Pages/Data/themes.js","Pages/Components/ThemeSwitcher.jsx","services/api.js","Pages/Components/Navigationbar.jsx","Pages/Components/ListExercises.jsx","Pages/Home/index.jsx","Pages/Login/index.jsx","Pages/Exercise/index.jsx","routes.js","App.jsx","serviceWorker.js","store/index.jsx","index.jsx"],"names":["module","exports","themes","ThemeSwitcher","state","currentTheme","setTheme","theme","Object","keys","forEach","key","cssKey","cssValue","document","body","style","setProperty","chooseRandomTheme","themeNames","randomThemeNumber","Math","floor","random","length","setState","toggleTheme","currentThemeIndex","indexOf","this","prevProps","prevState","onClick","className","id","type","htmlFor","React","Component","api","create","baseURL","headers","Accept","post","endpoint","params","a","token","Authorization","then","response","data","catch","error","get","Navigationbar","props","useState","loggedin","setLoggedState","fname","setFname","lname","setLname","setUsername","email","setEmail","loginModalShow","setLoginModalShow","handleCloseLogin","registerModalShow","setRegisterModalShow","handleCloseRegister","authError","setAuthError","registerError","setRegisterError","emailsMustMatch","setEmailsMustMatch","passwordsMustMatch","setPasswordsMustMatch","userExists","setUserExists","getPerfil","localStorage","getItem","results","first_name","last_name","username","console","log","status","logout","login","credentials","setItem","access","refresh","detail","removeItem","collapseOnSelect","variant","expand","backgroundColor","show","onHide","Header","closeButton","Title","Body","onSubmit","event","preventDefault","target","elements","value","password","Group","Label","Control","name","placeholder","required","Footer","form","password2","cpassword","email2","cemail","user_type","userType","item","split","map","isInvalid","Feedback","autoComplete","as","Brand","src","require","alt","height","Toggle","aria-controls","Collapse","inline","onChange","setSearch","bind","width","roundedCircle","border","Link","addResponseTransform","ok","ListExercises","exercises","setExercises","useEffect","search_string","trim","temp","exercise","i","response2","hasNotSubHeadings","Subheadings","error2","tags","Problem","xs","parse","tag","k","Context","options","asciimath2jax","useMathMLspacing","delimiters","preview","Text","text","subheading","j","tags2","Question","Order","m","Sugestion","Home","Login","Exercise","Routes","path","component","exact","App","Boolean","window","location","hostname","match","INITIAL_STATE","reducer","combineReducers","auth","action","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.793007e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5cbbadf4.png\";","const themes = {\r\n    'rez': {\r\n      'green-color': 'rgb(4, 211, 97)',\r\n      'black-color': 'rgb(19, 18, 26)',\r\n      'white-color': 'rgb(255, 255, 255)',\r\n      'grey-color': 'rgb(135, 134, 139)',\r\n      'button-color': 'rgb(19, 18, 26)',\r\n      'text-color': 'rgba(4, 211, 97)'\r\n    },\r\n    'rez2': {\r\n      'green-color': 'rgba(4, 211, 97)',\r\n      'white-color': 'rgb(19, 18, 26)',\r\n      'black-color': 'rgb(255, 255, 255)',\r\n      'grey-color': 'rgb(135, 134, 139)',\r\n      'text-color': 'rgb(255, 255, 255)',\r\n      'button-color': 'rgba(4, 211, 97)'\r\n    },\r\n  };\r\n  \r\n  export default themes;","import React from 'react';\r\nimport themes from '../Data/themes';\r\nimport './ThemeSwitcherStyle.css'\r\nclass ThemeSwitcher extends React.Component {\r\n  state = { currentTheme: 'rez' }\r\n\r\n  componentDidMount() {\r\n    this.chooseRandomTheme();\r\n    this.setTheme();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentTheme !== prevState.currentTheme) {\r\n      this.setTheme();\r\n    }\r\n  }\r\n\r\n  setTheme = () => {\r\n    const theme = themes[this.state.currentTheme];\r\n    Object.keys(theme).forEach((key) => {\r\n      const cssKey = `--${key}`;\r\n      const cssValue = theme[key];\r\n      document.body.style.setProperty(cssKey, cssValue);\r\n    });\r\n  }\r\n\r\n  chooseRandomTheme = () => {\r\n    const themeNames = Object.keys(themes);\r\n    const randomThemeNumber = Math.floor(Math.random() * themeNames.length);\r\n    this.setState({ currentTheme: themeNames[randomThemeNumber] });\r\n  }\r\n  toggleTheme = () => {\r\n    const themeNames = Object.keys(themes);\r\n    const currentThemeIndex = themeNames.indexOf(this.state.currentTheme);\r\n    if (currentThemeIndex === themeNames.length - 1) {\r\n      this.setState({ currentTheme: themeNames[0] });\r\n    } else {\r\n      this.setState({ currentTheme: themeNames[currentThemeIndex + 1] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <input\r\n        onClick={this.toggleTheme}\r\n        className=\"react-switch-checkbox\"\r\n        id={`react-switch-new`}\r\n        type=\"checkbox\"\r\n      />\r\n      <label\r\n        className=\"react-switch-label\"\r\n        htmlFor={`react-switch-new`}\r\n      >\r\n        <span className={`react-switch-button`} />\r\n      </label>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeSwitcher;","import { create } from \"apisauce\";\r\n\r\nconst api = create({\r\n  //baseURL: \"http://127.0.0.1:8000/api/v1\",\r\n  baseURL: \"https://softboarddev.herokuapp.com/api/v1\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\napi.addResponseTransform(response => {\r\n  if (!response.ok) {\r\n    throw response;\r\n  }\r\n});\r\n\r\nasync function post(endpoint, params, token = null) {\r\n  if (token) {\r\n    return await api\r\n      .post(endpoint, params, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n  return await api\r\n    .post(endpoint, params)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nasync function get(endpoint, params, token = null) {\r\n  if (token) {\r\n    return await api\r\n      .get(endpoint, params, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n  return await api\r\n    .get(endpoint, params)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport { post, get };\r\n","import React, { useState } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport ThemeSwitcher from './ThemeSwitcher';\r\n\r\nimport { post, get } from \"../../services/api\";\r\n\r\nexport default function Navigationbar(props) {\r\n  const [loggedin, setLoggedState] = useState(false);\r\n  const [fname, setFname] = useState(null);\r\n  const [lname, setLname] = useState(null);\r\n  const [, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const [loginModalShow, setLoginModalShow] = useState(false);\r\n  const handleCloseLogin = () => setLoginModalShow(false);\r\n  const handleShowLogin = () => setLoginModalShow(true);\r\n\r\n  const [registerModalShow, setRegisterModalShow] = useState(false);\r\n  const handleCloseRegister = () => setRegisterModalShow(false);\r\n  const handleShowRegister = () => setRegisterModalShow(true);\r\n\r\n  const [authError, setAuthError] = useState(null);\r\n  const [registerError, setRegisterError] = useState(null);\r\n  const [emailsMustMatch, setEmailsMustMatch] = useState(false);\r\n  const [passwordsMustMatch, setPasswordsMustMatch] = useState(false);\r\n  const [userExists, setUserExists] = useState(false);\r\n\r\n  const getPerfil = () => {\r\n    get(\"/user/\", {}, localStorage.getItem(\"@megua:access_token\"))\r\n      .then(response => {\r\n        setFname(response.results[0].first_name);\r\n        setLname(response.results[0].last_name);\r\n        setUsername(response.results[0].username);\r\n        setEmail(response.results[0].email);\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        if (error.status === 401) {\r\n          logout();\r\n        }\r\n      });\r\n  };\r\n\r\n  //TODO: Rever o token refresh\r\n\r\n  const login = credentials => {\r\n    post(\"/token/\", credentials)\r\n      .then(response => {\r\n        setLoggedState(true);\r\n        setAuthError(null);\r\n        localStorage.setItem(\"@megua:access_token\", response.access);\r\n        localStorage.setItem(\"@megua:refresh_token\", response.refresh);\r\n        getPerfil();\r\n        handleCloseLogin();\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        if (error.status >= 500) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === 404) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === null) {\r\n          setAuthError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (\r\n          error.data.detail ===\r\n          \"No active account found with the given credentials\"\r\n        ) {\r\n          setAuthError(\"Nome do usuário ou password errados.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const register = data => {\r\n    post(\"/register/\", data)\r\n      .then(response => {\r\n        login({ username: data.username, password: data.password });\r\n        setRegisterError(null);\r\n        setEmailsMustMatch(false);\r\n        setUserExists(false);\r\n        setPasswordsMustMatch(false);\r\n        handleCloseRegister();\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n        setEmailsMustMatch(false);\r\n        setPasswordsMustMatch(false);\r\n        setUserExists(false);\r\n        setRegisterError(null);\r\n        if (error.status >= 500) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === 404) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.status === null) {\r\n          setRegisterError(\r\n            \"Ocorreu um problema interno. Por favor tente novamente mais tarde.\"\r\n          );\r\n        } else if (error.data) {\r\n          for (let item in error.data) {\r\n            switch (error.data[item][0]) {\r\n              case \"Emails must match\":\r\n                setEmailsMustMatch(true);\r\n                break;\r\n              case \"Passwords must match\":\r\n                setPasswordsMustMatch(true);\r\n                break;\r\n              case \"user with this username already exists.\":\r\n                setUserExists(true);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoggedState(false);\r\n    setFname(false);\r\n    setLname(false);\r\n    setUsername(false);\r\n    setEmail(false);\r\n    localStorage.removeItem(\"@megua:access_token\");\r\n    localStorage.removeItem(\"@megua:refresh_token\");\r\n  };\r\n\r\n  const handleSubmitLogin = event => {\r\n    event.preventDefault();\r\n    login({\r\n      username: event.target.elements.username.value,\r\n      password: event.target.elements.password.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitRegister = event => {\r\n    event.preventDefault();\r\n    register({\r\n      username: event.target.elements.username.value,\r\n      first_name: event.target.elements.fname.value,\r\n      last_name: event.target.elements.lname.value,\r\n      password: event.target.elements.password.value,\r\n      password2: event.target.elements.cpassword.value,\r\n      email: event.target.elements.email.value,\r\n      email2: event.target.elements.cemail.value,\r\n      user_type: event.target.elements.userType.value\r\n    });\r\n  };\r\n\r\n  const token = localStorage.getItem(\"@megua:access_token\");\r\n  useState(() => {\r\n    if (token !== null) {\r\n      setLoggedState(true);\r\n      getPerfil();\r\n    }\r\n  }, []);\r\n\r\n  const search = event => {\r\n    props.setSearch(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"navbar-line fixed-top\"\r\n      collapseOnSelect\r\n      variant=\"dark\"\r\n      expand=\"lg\"\r\n      style={{ backgroundColor: \"--var(dark-color)\" }}\r\n    >\r\n      <Modal show={loginModalShow} onHide={handleCloseLogin}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Entrar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"loginForm\" onSubmit={handleSubmitLogin}>\r\n            {authError && <Alert variant={\"danger\"}>{authError}</Alert>}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nome de usuário</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nome de usuário\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Palavra passe\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button form=\"loginForm\" type=\"submit\" variant=\"primary\">\r\n            Entrar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseLogin}>\r\n            Cancelar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={registerModalShow} onHide={handleCloseRegister}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"registerForm\" onSubmit={handleSubmitRegister}>\r\n            {registerError &&\r\n              registerError.split(\";\").map(error => {\r\n                return <Alert variant={\"danger\"}>{error}</Alert>;\r\n              })}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Nome de usuário</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nome de usuário\"\r\n                isInvalid={userExists}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Já existe um usuário com este nome\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Palavra passe\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirmar palavra passe</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"cpassword\"\r\n                autoComplete=\"confirm-password\"\r\n                placeholder=\"Confirmar palavra passe\"\r\n                isInvalid={passwordsMustMatch}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                As passwords devem coincidir\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Primeiro nome</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                placeholder=\"Primeiro nome\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Último nome</Form.Label>\r\n              <Form.Control name=\"lname\" placeholder=\"Último nome\" required />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirmar email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"cemail\"\r\n                autoComplete=\"confirm-email\"\r\n                placeholder=\"Confirmar email\"\r\n                isInvalid={emailsMustMatch}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Os emails devem coincidir\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Tipo de utilizador</Form.Label>\r\n              <Form.Control as=\"select\" name=\"userType\">\r\n                <option value=\"ST\">Estudante</option>\r\n                <option value=\"PROF\">Professor</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button form=\"registerForm\" type=\"submit\" variant=\"primary\">\r\n            Registar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseRegister}>\r\n            Cancelar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Image\r\n            src={require(\"../../media/logo.png\")}\r\n            alt=\"Brand\"\r\n            style={{ height: \"3em\" }}\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Form className=\"ml-auto\" inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Pesquisar\"\r\n              className=\" mr-sm-2\"\r\n              onChange={search.bind(this)}\r\n            />\r\n            <Button type=\"submit\">Pesquisar</Button>\r\n          </Form>\r\n          {loggedin ? (\r\n            <Nav className=\"ml-auto\">\r\n              <Row>\r\n                <div className=\"ml-auto text-right\">\r\n                  <Col>\r\n                    {fname} {lname}\r\n                  </Col>\r\n                  <Col className=\"mail-nav\">{email}</Col>\r\n                </div>\r\n                <div className=\"mr-3\">\r\n                  <Image\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    roundedCircle\r\n                    style={{\r\n                      border: \"3px solid rgb(4, 211, 97)\"\r\n                    }}\r\n                    src=\"https://avatars2.githubusercontent.com/u/17366849?v=4\"\r\n                    alt=\"Profile\"\r\n                  />\r\n                </div>\r\n              </Row>\r\n              <Nav.Link className=\"button-nav\" onClick={logout}>\r\n                <strong>Logout</strong>\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className=\"button-nav\" onClick={handleShowLogin}>\r\n                <strong>Entrar</strong>\r\n              </Nav.Link>\r\n              <Nav.Link className=\"button-nav\" onClick={handleShowRegister}>\r\n                <strong>Registar</strong>\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n          <ThemeSwitcher />\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { get } from \"../../services/api\";\r\nimport parse from \"html-react-parser\";\r\nimport MathJax from \"react-mathjax2\";\r\n\r\nexport default function ListExercises(props) {\r\n  const [exercises, setExercises] = useState([]);\r\n\r\n  function sleep(milliseconds) {\r\n    var start = new Date().getTime();\r\n    for (var i = 0; i < 1e7; i++) {\r\n      if (new Date().getTime() - start > milliseconds) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const getExercises = () => {\r\n    const str =\r\n      props.search_string.trim() === \"\"\r\n        ? \"/exercise/\"\r\n        : \"/exercise/?search=\" + props.search_string;\r\n    return get(str, {})\r\n      .then(response => {\r\n        //TODO: para cada exercicio, ir buscar as alineas\r\n        const temp = [];\r\n        if (response.results.length === 0) {\r\n          setExercises([]);\r\n        }\r\n        response.results.map(async (exercise, i) => {\r\n          return await get(\"/subheading/\" + exercise.id + \"/\", {})\r\n            .then(response2 => {\r\n              if (!exercise.hasNotSubHeadings) {\r\n                exercise.Subheadings = response2.results;\r\n              }\r\n              temp[i] = exercise;\r\n              if (i + 1 === response.results.length) setExercises(temp);\r\n            })\r\n            .catch(error2 => {\r\n              console.log(error2);\r\n            });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        //TODO Tratamento de erros\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [props.search_string]);\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content\">\r\n        <Container>\r\n          <Row>\r\n            {exercises.map((exercise, i) => {\r\n              const tags = exercise.Problem.split(\"$$\");\r\n              return (\r\n                <Col key={i} xs={12} className=\"mt-3\">\r\n                  <h1>{parse(exercise.Title)}</h1>\r\n                  {tags.map((tag, k) => {\r\n                    if (k % 2 === 0) {\r\n                      return <div key={k}>{parse(tag)}</div>;\r\n                    } else {\r\n                      return (\r\n                        <MathJax.Context\r\n                          key={k}\r\n                          options={{\r\n                            asciimath2jax: {\r\n                              useMathMLspacing: true,\r\n                              delimiters: [\r\n                                [\"$$\", \"$$\"],\r\n                                [\"$\", \"$\"]\r\n                              ],\r\n                              preview: \"none\"\r\n                            }\r\n                          }}\r\n                        >\r\n                          <MathJax.Text text={tag} />\r\n                        </MathJax.Context>\r\n                      );\r\n                    }\r\n                  })}\r\n\r\n                  {exercise.Subheadings &&\r\n                    exercise.Subheadings.map((subheading, j) => {\r\n                      const tags2 = subheading.Question.split(\"$$\");\r\n                      return (\r\n                        <div key={j}>\r\n                          {subheading.Order}\r\n                          {\") \"}\r\n                          {tags2.map((tag, m) => {\r\n                            if (m % 2 === 0) {\r\n                              return <div key={m}>{parse(tag)}</div>;\r\n                            } else {\r\n                              return (\r\n                                <MathJax.Context\r\n                                  options={{\r\n                                    asciimath2jax: {\r\n                                      useMathMLspacing: true,\r\n                                      delimiters: [\r\n                                        [\"$$\", \"$$\"],\r\n                                        [\"$\", \"$\"]\r\n                                      ],\r\n                                      preview: \"none\"\r\n                                    }\r\n                                  }}\r\n                                  key={m}\r\n                                >\r\n                                  <MathJax.Text text={tag} />\r\n                                </MathJax.Context>\r\n                              );\r\n                            }\r\n                          })}\r\n                          <div>{subheading.Sugestion}</div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport Navigationbar from '../Components/Navigationbar';\r\nimport ListExercises from '../Components/ListExercises';\r\n\r\nexport default function Home() {\r\n\tconst [search_string, setSearch] = useState('');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<Navigationbar\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListExercises\r\n\t\t\t\t\tsearch_string={search_string}\r\n\t\t\t\t\tsetSearch={setSearch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nimport Navigationbar from \"../Components/Navigationbar\";\r\nimport ListExercises from \"../Components/ListExercises\";\r\n\r\nexport default function Login() {\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <Navigationbar />\r\n        <ListExercises />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Exercise() {\r\n    return(<>\r\n    </>)\r\n}","import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Pages/Home';\r\nimport Login from './Pages/Login';\r\nimport Exercise from './Pages/Exercise';\r\n\r\nexport default function Routes() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" component={Home} exact />\r\n\t\t\t\t<Route path=\"/Login\" component={Login} />\r\n\t\t\t\t<Route path=\"/Exercise\" component={Exercise} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\n// import Button from 'react-bootstrap/Button';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n// import Image from 'react-bootstrap/Image';\r\n// import Row from 'react-bootstrap/Row';\r\n// import Col from 'react-bootstrap/Col';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import logo from './media/logo.png';\r\n\r\nimport Routes from \"./routes\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n\ttoken: ''\r\n};\r\n\r\nfunction auth(state = INITIAL_STATE, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_TOKEN':\r\n\t\t\treturn { ...state, token: action.token };\r\n\t\tcase 'REMOVE_TOKE':\r\n\t\t\treturn { ...state, token: '' };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst reducer = combineReducers({ auth: auth });\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}